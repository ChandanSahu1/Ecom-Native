{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar Stack = createNativeStackNavigator();\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useFonts } from \"expo-font\";\nimport NxgForgot from \"./screens/NxgForgot\";\nimport NxgLogin from \"./screens/NxgLogin\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar App = function App() {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    hideSplashScreen = _React$useState2[0],\n    setHideSplashScreen = _React$useState2[1];\n  var _useFonts = useFonts({\n      Poppins: require(\"./assets/fonts/Poppins.ttf\"),\n      Poppins_regular: require(\"./assets/fonts/Poppins_regular.ttf\"),\n      Poppins_medium: require(\"./assets/fonts/Poppins_medium.ttf\"),\n      Poppins_bold: require(\"./assets/fonts/Poppins_bold.ttf\"),\n      Inter: require(\"./assets/fonts/Inter.ttf\"),\n      Inter_regular: require(\"./assets/fonts/Inter_regular.ttf\"),\n      Inter_light_italic: require(\"./assets/fonts/Inter_light_italic.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 2),\n    fontsLoaded = _useFonts2[0],\n    error = _useFonts2[1];\n  if (!fontsLoaded && !error) {\n    return null;\n  }\n  return _jsx(_Fragment, {\n    children: _jsx(NavigationContainer, {\n      children: hideSplashScreen ? _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"NxgForgot\",\n          component: NxgForgot,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"NxgLogin\",\n          component: NxgLogin,\n          options: {\n            headerShown: false\n          }\n        })]\n      }) : null\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["Stack","createNativeStackNavigator","React","NavigationContainer","useFonts","NxgForgot","NxgLogin","View","Text","Pressable","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","_React$useState","useState","_React$useState2","_slicedToArray","hideSplashScreen","setHideSplashScreen","_useFonts","Poppins","require","Poppins_regular","Poppins_medium","Poppins_bold","Inter","Inter_regular","Inter_light_italic","_useFonts2","fontsLoaded","error","children","Navigator","screenOptions","headerShown","Screen","name","component","options"],"sources":["D:/nativlogin/loginforgot nxg/App.js"],"sourcesContent":["const Stack = createNativeStackNavigator();\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useFonts } from \"expo-font\";\nimport NxgForgot from \"./screens/NxgForgot\";\nimport NxgLogin from \"./screens/NxgLogin\";\n\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { View, Text, Pressable, TouchableOpacity } from \"react-native\";\n\nconst App = () => {\n  const [hideSplashScreen, setHideSplashScreen] = React.useState(true);\n  const [fontsLoaded, error] = useFonts({\n    Poppins: require(\"./assets/fonts/Poppins.ttf\"),\n    Poppins_regular: require(\"./assets/fonts/Poppins_regular.ttf\"),\n    Poppins_medium: require(\"./assets/fonts/Poppins_medium.ttf\"),\n    Poppins_bold: require(\"./assets/fonts/Poppins_bold.ttf\"),\n    Inter: require(\"./assets/fonts/Inter.ttf\"),\n    Inter_regular: require(\"./assets/fonts/Inter_regular.ttf\"),\n    Inter_light_italic: require(\"./assets/fonts/Inter_light_italic.ttf\"),\n  });\n\n  if (!fontsLoaded && !error) {\n    return null;\n  }\n\n  return (\n    <>\n      <NavigationContainer>\n        {hideSplashScreen ? (\n          <Stack.Navigator screenOptions={{ headerShown: false }}>\n            <Stack.Screen\n              name=\"NxgForgot\"\n              component={NxgForgot}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"NxgLogin\"\n              component={NxgLogin}\n              options={{ headerShown: false }}\n            />\n          </Stack.Navigator>\n        ) : null}\n      </NavigationContainer>\n    </>\n  );\n};\nexport default App;\n"],"mappings":";AAAA,IAAMA,KAAK,GAAGC,0BAA0B,EAAE;AAC1C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAOC,SAAS;AAChB,OAAOC,QAAQ;AAEf,SAASL,0BAA0B,QAAQ,gCAAgC;AAAC,OAAAM,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5E,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,eAAA,GAAgDhB,KAAK,CAACiB,QAAQ,CAAC,IAAI,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA7DI,gBAAgB,GAAAF,gBAAA;IAAEG,mBAAmB,GAAAH,gBAAA;EAC5C,IAAAI,SAAA,GAA6BpB,QAAQ,CAAC;MACpCqB,OAAO,EAAEC,OAAO,8BAA8B;MAC9CC,eAAe,EAAED,OAAO,sCAAsC;MAC9DE,cAAc,EAAEF,OAAO,qCAAqC;MAC5DG,YAAY,EAAEH,OAAO,mCAAmC;MACxDI,KAAK,EAAEJ,OAAO,4BAA4B;MAC1CK,aAAa,EAAEL,OAAO,oCAAoC;MAC1DM,kBAAkB,EAAEN,OAAO;IAC7B,CAAC,CAAC;IAAAO,UAAA,GAAAZ,cAAA,CAAAG,SAAA;IARKU,WAAW,GAAAD,UAAA;IAAEE,KAAK,GAAAF,UAAA;EAUzB,IAAI,CAACC,WAAW,IAAI,CAACC,KAAK,EAAE;IAC1B,OAAO,IAAI;EACb;EAEA,OACEvB,IAAA,CAAAI,SAAA;IAAAoB,QAAA,EACExB,IAAA,CAACT,mBAAmB;MAAAiC,QAAA,EACjBd,gBAAgB,GACfR,KAAA,CAACd,KAAK,CAACqC,SAAS;QAACC,aAAa,EAAE;UAAEC,WAAW,EAAE;QAAM,CAAE;QAAAH,QAAA,GACrDxB,IAAA,CAACZ,KAAK,CAACwC,MAAM;UACXC,IAAI,EAAC,WAAW;UAChBC,SAAS,EAAErC,SAAU;UACrBsC,OAAO,EAAE;YAAEJ,WAAW,EAAE;UAAM;QAAE,EAChC,EACF3B,IAAA,CAACZ,KAAK,CAACwC,MAAM;UACXC,IAAI,EAAC,UAAU;UACfC,SAAS,EAAEpC,QAAS;UACpBqC,OAAO,EAAE;YAAEJ,WAAW,EAAE;UAAM;QAAE,EAChC;MAAA,EACc,GAChB;IAAI;EACY,EACrB;AAEP,CAAC;AACD,eAAetB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}